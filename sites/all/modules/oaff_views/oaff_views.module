<?php

/**
 * Implements hook_views_api
 * declared API version used for views 
 */
function oaff_views_views_api() {
  return array(
    'api' => "3.0",
  );
}

/**
 * Implements hook_views_query_alter
 * Alters the query defined in some views to add functionality 
 * that the views API is to weak to define. 
 * Currently: 
 *   oaff_broken_docs => add filter for nodes which are marked as broken in database 
 */
function oaff_views_views_query_alter(&$view, &$query) {
  if ($view->name == 'oaff_broken_docs') {
    $results = db_select('oaff_errors', 'e')
      ->fields('e', array('nid'))
      ->execute()
      ->fetchAll();
    $err_nodes = array();
    foreach ($results as $result) {
      $err_nodes[] = $result->nid;
    }
    $cond =  array(
      "field" => 'node.nid',
      "value" => $err_nodes,
      'operator' => 'in'
    );
    $query->where[1]['conditions'][] = $cond;
  }
}

/**
 * implements hook_views_default_views
 * declares views, using view API
 * Currently: 
 *    oaff_broken_docs => view of all oaff nodes that have compilation errors
 */
function oaff_views_views_default_views() {
  $views = array();

  $view = new view();
  $view->name = 'oaff_broken_docs';
  $view->description = '';
  $view->tag = 'default';
  $view->base_table = 'node';
  $view->human_name = 'oaff_broken_docs';
  $view->core = 7;
  $view->api_version = '3.0';
  $view->disabled = false; /* Edit this to true to make a default view disabled initially */

  /* Display: Master */
  $handler = $view->new_display('default', 'Master', 'default');
  $handler->display->display_options['title'] = 'oaff_broken_docs';
  $handler->display->display_options['use_more_always'] = false;
  $handler->display->display_options['access']['type'] = 'perm';
  $handler->display->display_options['cache']['type'] = 'none';
  $handler->display->display_options['query']['type'] = 'views_query';
  $handler->display->display_options['exposed_form']['type'] = 'basic';
  $handler->display->display_options['pager']['type'] = 'full';
  $handler->display->display_options['pager']['options']['items_per_page'] = '10';
  $handler->display->display_options['style_plugin'] = 'default';
  $handler->display->display_options['row_plugin'] = 'node';
  /* Field: Content: Title */
  $handler->display->display_options['fields']['title']['id'] = 'title';
  $handler->display->display_options['fields']['title']['table'] = 'node';
  $handler->display->display_options['fields']['title']['field'] = 'title';
  $handler->display->display_options['fields']['title']['label'] = '';
  $handler->display->display_options['fields']['title']['alter']['word_boundary'] = false;
  $handler->display->display_options['fields']['title']['alter']['ellipsis'] = false;
  /* Sort criterion: Content: Post date */
  $handler->display->display_options['sorts']['created']['id'] = 'created';
  $handler->display->display_options['sorts']['created']['table'] = 'node';
  $handler->display->display_options['sorts']['created']['field'] = 'created';
  $handler->display->display_options['sorts']['created']['order'] = 'DESC';
  /* Filter criterion: Content: Published */
  $handler->display->display_options['filters']['status']['id'] = 'status';
  $handler->display->display_options['filters']['status']['table'] = 'node';
  $handler->display->display_options['filters']['status']['field'] = 'status';
  $handler->display->display_options['filters']['status']['value'] = 1;
  $handler->display->display_options['filters']['status']['group'] = 1;
  $handler->display->display_options['filters']['status']['expose']['operator'] = false;
  /* Filter criterion: Content: Type */
  $handler->display->display_options['filters']['type']['id'] = 'type';
  $handler->display->display_options['filters']['type']['table'] = 'node';
  $handler->display->display_options['filters']['type']['field'] = 'type';
  $handler->display->display_options['filters']['type']['value'] = array(
    'glossary' => 'glossary',
  );

  /* Display: Page */
  $handler = $view->new_display('page', 'Page', 'page');
  $handler->display->display_options['path'] = 'oaff-broken-docs';

  $views[$view->name] = $view;
  return $views;
}
