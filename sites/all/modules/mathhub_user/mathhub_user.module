<?php

/*************************************************************************
* This file is part of the MathHub.info System  (http://mathhub.info).   *
* It is hosted at https://github.com/KWARC/MathHub                       *
* Copyright (c) 2015 by the KWARC group (http://kwarc.info)              *
* Licensed under GPL3, see http://www.gnu.org/licenses/gpl.html          *
**************************************************************************/

/**
 * @file
 * A module that synchronizes the drupal accounts with gitlab accounts.
 *
 */

//include iso.inc for _locale_get_predefined_list
include_once DRUPAL_ROOT . '/includes/iso.inc';

/**
 * Implements getLanguages().
 *
 * It provides an array with language keys and english language names.
 */
function getLanguages() {
  $languages = array();
  $drupalLanguages = _locale_get_predefined_list();
  foreach($drupalLanguages as $key => $value) {
    $languages[$key] = array_values($value)[0];
  }
  return $languages;
}


/**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param path
 *   Which path of the site we're using to display help
 * @param arg
 *   Array that holds the current path as returned from arg() function
 */
function mathhub_user_help($path, $arg) {
  switch ($path) {
    case 'admin/help#mathhub_user':
      $output = '';
      $output .= '<h3>'.t('About').'</h3>';
      $output .= '<p>'.t('A module adds new fields to the profiles.').'</p>';
      return $output;
      break;
  }
} 

/**
 * Implements hook_menu().
 *
 * The function mathhub_user_menu implements the hook_menu and allows therefore 
 * to display the configuration menu.
 */
function mathhub_user_menu() {
  $items = array();
  $items['admin/config/mathhub/mathhub_user'] = array(
    'title' => 'Mathhub User',
    'description' => 'Configuration for Mathhub User module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mathhub_user_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Page callback: Mathhub User settings
 *
 * @see mathhub_user_menu()
 */
function mathhub_user_form($form, &$form_state) {
  $form['mathhub_user_log_messages'] = array(
    '#type' => 'checkbox',
    '#title' => t('Log Module Messages'),
    '#default_value' => variable_get('mathhub_user_log_messages', 1),
    '#description' => t('Whether the module should create log files or not.'),
    '#required' => false,
  );
  return system_settings_form($form);
}

/**
 * Implements hook_user_view().
 *
 * The function mathhub_user_user_view implements the hook_user_view and 
 * therefore shows the added fields on the user page.
 */
function mathhub_user_user_view($account, $viewmode) {
  $account->content['about']['email'] = array(
    '#type' => 'user_profile_item',
    '#title' => t('Email'),
    '#markup' => check_url($account->mail),
  );
  if(!empty($account->data['languages'])) {
    $account->content['about']['languages_languages'] = array(
      '#type' => 'user_profile_item',
      '#title' => t('Languages:'),
      '#markup' => implode(', ', array_intersect_key(getLanguages(), array_flip($account->data['languages']))),
    );
  }
}

/**
 * Implements hook_form_user_register_form_alter().
 *
 * The function mathhub_user_form_user_register_form_alter implements the 
 * hook_form_user_register_form_alter and allows therefore to add our extra 
 * user fields to the user registration form.
 */
function mathhub_user_form_user_register_form_alter(&$form, &$form_state, $form_id) {
  $form['#validate'][] = 'mathhub_user_register_user_form_validate';
  $form['#submit'][] = 'mathhub_user_user_register_submit';

  $form['account']['name']['#description'] = 'Punctuation is not allowed except for periods, hyphens, apostrophes, and underscores.';
  $form['account']['pass']['#description'] = '<div>After registering, your credentials can also be used for accessing the git sources on <a target="_blank" href="https://gl.mathhub.info">gl.mathhub.info</a></div>';
  $form['account']['pass']['#title'] = 'Password (above) needs to be at least 8 characters long!';
}

/**
 * Implements hook_form_user_profile_form_alter().
 *
 * The function mathhub_user_form_user_profile_form_alter implements the 
 * hook_form_user_profile_form_alter and allows therefore to add our extra 
 * user fields to the user profile edit form.
 */
function mathhub_user_form_user_profile_form_alter(&$form, &$form_state, $form_id) {
  $form['#validate'][] = 'mathhub_user_edit_user_form_validate';
  $form['#submit'][] = 'mathhub_user_user_edit_submit';

  $form['account']['name']['#description'] = 'Punctuation is not allowed except for periods, hyphens, apostrophes, and underscores.';
  $form['account']['pass']['#description'] = 'Provide a password for the new account in both fields. Minimum length is 8 characters.';


  $form["account"]["languages"] = array(
    '#type' => 'select', 
    '#title' => t('Select your languages.'), 
    '#description' => t('Select your languages.'),
    '#required' => false,
    '#weight' => 6,
    '#attributes' => array('data-placeholder' => 'Choose your languages.'),
    '#multiple' => true,
    '#options' => getLanguages());
  if(!empty($form_state['user']->data['languages'])) {
    $form['account']['languages']['#default_value'] = $form_state['user']->data['languages'];
  }
}

/**
 * Function mathhub_user_edit_user_form_validate
 *
 * This function validates the changes to users. Used by 
 * mathhub_user_form_user_profile_form_alter.
 */
function mathhub_user_edit_user_form_validate($form, &$form_state) {
  if(isset($form_state['input']['name']) && 
    (empty($form_state['input']['name']) ||
     !preg_match("/\A[a-zA-Z0-9_.][a-zA-Z0-9_\-\.]*(?<!\.git)\z/", $form_state['input']['name']))) {
    form_set_error('name', t("You must adhere to the username rules. 
                              The username can contain only letters, digits, '-', '.' and '_'."));
  }
  if(!empty($form_state['input']['pass']['pass1']) && 
      (strlen($form_state['input']['pass']['pass1']) < 8 ||
      $form_state['input']['pass']['pass1'] !== $form_state['input']['pass']['pass2'])) {
    form_set_error('pass', t("The password needs to be atleast 8 characters long."));
  }
  return;
}

/**
 * Function mathhub_user_user_form_validate
 *
 * This function validates the changes to users. Used by 
 * hook_form_user_register_form_alter
 */
function mathhub_user_register_user_form_validate($form, &$form_state) {
  if(isset($form_state['input']['name']) && 
    (empty($form_state['input']['name']) ||
     !preg_match("/\A[a-zA-Z0-9_.][a-zA-Z0-9_\-\.]*(?<!\.git)\z/", $form_state['input']['name']))) {
    form_set_error('name', t("You must adhere to the username rules. 
                              The username can contain only letters, digits, '-', '.' and '_'."));
  }
  if(!isset($form_state['input']['pass']) || 
      strlen($form_state['input']['pass']['pass1']) < 8 ||
      $form_state['input']['pass']['pass1'] !== $form_state['input']['pass']['pass2']) {
    form_set_error('pass', t("The password needs to be at least 8 characters long."));
  }
  return;
}

/**
 * Function mathhub_user_user_register_submit
 *
 * This function process the registration to a user. Used by 
 * hook_form_user_register_form_alter. 
 */
function mathhub_user_user_register_submit(&$form, &$form_state) {
	//empty for now
	if (variable_get('mathhub_user_log_messages') === 1) {
      watchdog('mathhub_user',
               'Created MathHub User succesfully.',
               array(),
               WATCHDOG_NOTICE,
               '');
    }
}

/**
 * Function mathhub_user_user_edit_submit
 *
 * This function process the change to a user. Used by 
 * mathhub_user_form_user_profile_form_alter. 
 */
function mathhub_user_user_edit_submit(&$form, &$form_state) {
    if (variable_get('mathhub_user_log_messages') === 1) {
      watchdog('mathhub_user',
               'Updated MathHub User succesfully.',
               array(),
               WATCHDOG_NOTICE,
               '');
    }
    return;
}


/**
 * Implements hook_user_delete().
 *
 * The function mathhub_user_user_delete deletes the specified GitLab account.
 *
 * @param account
 *   The account that is being deleted from gitlab  
 */
function mathhub_user_user_delete($account) {
    // we performed the request without errors. 
    if (variable_get('mathhub_user_log_messages') === 1) {
      watchdog('mathhub_user',
               'Deleted GitHub User succesfully.',
               array(),
               WATCHDOG_NOTICE,
               '');
    }
    return;
}

/**
 * Implement hook_user_presave().
 *
 * Used to save additional data with the user. 
 */
function mathhub_user_user_presave(&$edit, $account, $category) {
  if (!empty($edit['languages'])) {
    $edit['data']['languages'] = array_values($edit['languages']);
  } else {
    $edit['data']['languages'] = array('en');
  }
}
