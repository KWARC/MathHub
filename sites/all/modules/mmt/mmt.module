<?php

/**
 * Implementing hook_menu()
 */
function mmt_menu() {
    $items['mmt/setup'] = array(
	  'title' => "Setup MMT",
	  'page callback' => 'mmt_setup',
	  'access callback' => true,
	  'menu_name' => 'navigation'
	);

  $items['mmt/archives'] = array(
      'title' => "Archive Callback",
	  'page callback' => 'mmt_archives',
	  'access callback' => true,
      'type' => MENU_CALLBACK,
	);

    return $items;
  }

function mmt_archives() {
  return "Nothing here yet";
}

/**
 * Initialize MMT, loads css and js files and uses jobad API
 */
function mmt_initialize() {
	/**
     * CSS
     */
    $mmtPath = drupal_get_path('module', 'mmt');
    $mmtUrl = variable_get('mmtUrl');  
 
    //drupal_add_css($mmtPath . '/resources/mmt-web/css/omdoc/omdoc-default.css');
    drupal_add_css($mmtPath . '/resources/mmt-web/css/mmt.css', array('weight' => PHP_INT_MAX, 'every_page' => false));
   // drupal_add_css($mmtPath . '/resources/mmt-web/css/browser.css');
    drupal_add_css($mmtPath . '/resources/mmt-web/script/codemirror2/lib/codemirror.css');
    //drupal_add_css($mmtPath . '/resources/mmt-web/css/JOBAD.css');
    drupal_add_css($mmtPath . '/resources/mmt-web/css/jquery/jquery-ui.css');
    
    /**
     * JavaScript
     */
    drupal_add_js('var mmtUrl = "' . $mmtUrl . '";', 'inline');
    
  
    jobad_add_module($mmtPath . '/resources/mmt-web/script/jobad/modules/planetary-navigation.js', "kwarc.mmt.planetary.navigation");
    jobad_add_module($mmtPath . '/resources/mmt-web/script/jobad/modules/hovering.js', "kwarc.mmt.hovering");
    jobad_add_module($mmtPath . '/resources/mmt-web/script/jobad/modules/interactive-viewing.js', "kwarc.mmt.intvw");
  //  jobad_add_module($mmtPath . '/resources/mmt-web/script/jobad/modules/edit.js', "kwarc.mmt.editing");
  //  jobad_add_module($mmtPath . '/resources/mmt-web/script/jobad/modules/folding.js', "kwarc.mmt.folding");
    $instName = jobad_initialize();
    //codemirror (editor)
    drupal_add_js($mmtPath . '/resources/mmt-web/script/codemirror2/lib/codemirror.js', 'file');
    drupal_add_js($mmtPath . '/resources/mmt-web/script/codemirror2/mode/lf/lf.js', 'file');  
    //tree 
    drupal_add_js($mmtPath . '/resources/mmt-web/script/tree/jquery.hotkeys.js', 'file');
    drupal_add_js($mmtPath . '/resources/mmt-web/script/tree/jquery.jstree.js', 'file');
    //mmt js libs
    drupal_add_js($mmtPath . '/resources/mmt-web/script/jobad/mmt-html.js', 'file', array('cache' => false));
    drupal_add_js($mmtPath . '/resources/mmt-web/script/jobad/mathml.js', 'file', array('cache' => false));
    //modules
    return $instName;
}

/**
 * view mmt docs by loading html directly (obsolete)
 */
function mmt_toplevel_view() {
  	$instName = mmt_initialize();
    // Set some parameters for sending request.
    $url = 'http://localhost:8080/:mmt????_present_http://cds.omdoc.org/styles/lf/mathml.omdoc?twelf';
    // Send the request.
    $result = '<div id="' . $instName . '" style="overflow:auto">' . file_get_contents($url) . '</div>';
    return $result;
}

/**
 * implements hook_block_info
 */
function mmt_block_info() {
  $blocks['menu'] = array(
   'info' => t('MMT Menu')
  );
  return $blocks;
}

/**
 * implements hook_block_view
 */
function mmt_block_view($delta='menu') {
  $mmtUrl = variable_get('mmtUrl');  	
  $block = array();
  $content = "";
  switch ($delta) {
    case 'menu':
   	  $url = 'http://localhost:8080/:tree?:root';
      $result = file_get_contents($url);
      $xml_result = simplexml_load_string($result);
      foreach ($xml_result->item as $item) {
        $name = $item->content->name;
        $id = $item['id'];
        $content .= '<li onclick="latin_navigate(\'' . $id . '\')">' . $name . "</li>";
      }
      $content = "<ul>" . $content . "</ul>";
	  break;
  }
  $block['content'] = $content;
  $block['subject'] = t("MMT Menu");
  return $block;
}

/**
 * implements hook_form_alter, adds URI field to mmt-specific forms
 */
function mmt_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'mmt_module_node_form' || $form_id == 'mmt_document_node_form') {
    $form['uri'] = array(
      '#type' => 'textfield',
      '#title' => t('MMT URI'),
	);

	if(array_key_exists('nid', $form_state['node'])) { //editing existing node
		$nid = $form_state['node']->nid;
		$result = db_select('mmturi', 'm')->fields('m',array('uri'))->condition('nid', $nid, '=')->execute()->fetchAssoc();
		$uri = $result['uri'];
		$form['uri']['#default_value'] = $uri;
		$form['uri']['#disabled'] = TRUE;
	}
  }
}

/**
 * implements hook_node_insert, inserts URI to mmturi table, for mmt-specific nodes
 */
function mmt_node_insert($node) {
  if ($node->type == 'mmt_module' || $node->type == 'mmt_document') {
    db_insert('mmturi')->fields(array('nid' => $node->nid, 'uri' => $node->uri))->execute();
  }
}

/**
 * implements hook_node_load, loads URI from mmturi table, for mmt-specific nodes
 */
function mmt_node_load($nodes, $types) {
  $mmtNodes = array();
  foreach ($nodes as $node) {
    if ($node->type == 'mmt_module' || $node->type == 'mmt_document') {
      $mmtNodes[$node->nid] = $node;
    }
  }
  if (count($mmtNodes) > 0) { //something to do	
    $result = db_query('SELECT nid,uri FROM {mmturi} WHERE nid IN (:nids)', array(':nids' => array_keys($mmtNodes)));
    foreach ($result as $record) {
      $nodes[$record->nid]->uri = $record->uri; 
    }
  }
}

/**
 * implements hook_node_view, renders mmt-specific nodes by loading html from MMT instance
 */
function mmt_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'mmt_module' || $node->type == 'mmt_document') {
	$inst_id = mmt_initialize();
    $mmtUrl = variable_get('mmtUrl');  
    $style = 'http://cds.omdoc.org/styles/lf/mathml.omdoc?twelf'; //TODO make also global and/or configurable
    $postPath = '???'; //default-for documents

	if ($node->type == 'mmt_module') {
		$postPath = '??';
    }

    $url = $mmtUrl . '/:mmt?' . $node->uri . $postPath . '_present_' . $style;
    $mmt_content = file_get_contents($url);
	//print($mmt_content);
    $node->content['mathml_body'] = array(
      '#markup' => '<div id=' . $inst_id . ' style="overflow:auto">' . $mmt_content . '</div>',
      '#weight' => 10,
    );
  }
}

/**
 * helper function to automatically create nodes in drupal by loading from an MMT instance (currently hardcoded)
 */
function mmt_setup() {
  $mmtUrl = variable_get('mmtUrl');
  $qUrl = $mmtUrl . '/:planetary/getPaths';
  $result = file_get_contents($qUrl);
  mmt_load_nodes($result);
//  menu_build_tree('navigation');
  drupal_set_message("Success");
  return "";
}


function mmt_load_nodes($pathsStr) {
  $lines = explode("\n", $pathsStr);
  $uri = array("mmt","archives");
  $plids_stack = array();
  $mlids = variable_get('mmt_mlids');
  $arch_item = array(
	  'link_path' => drupal_get_normal_path('mmt/archives'),
	  'link_title' => "Archives",
	  'menu_name' => 'navigation'
	);
  $id = menu_link_save($arch_item);
  $plids_stack[] = $id;
  $mlids[] = $id;
  foreach ($lines as $line) {
    if ($line == "") {
  	  array_pop($uri); //reset uri
      array_pop($plids_stack); //reset plids  	  
	} else {
	  $pair = explode(" ", $line);
	  $uri[] = $pair[0];
	  $nid = mmt_make_node($pair[1], $pair[0]); //$node->nid
      //path from url 
      $alias = $pair[1];  
      $pathOpt = array(
		'source' => 'node/' . $nid,
		'alias' => $alias,
	  );
	  path_save($pathOpt);
      //link for tree menu
      $menuOpt = array (
		'link_path' => drupal_get_normal_path($alias),
        'link_title' => $uri[count($uri) - 1],
        'plid' => $plids_stack[count($plids_stack) - 1],
        'menu_name' => 'navigation',
	  );
      $id = menu_link_save($menuOpt);
	  $mlids[] = $id;
	  $plids_stack[] = $id;
  	}
  }
  variable_set('mmt_mlids', $mlids);
  menu_cache_clear_all();
}

/**
 * helper function for mmt_load_nodes, adds individual node
 */
function mmt_make_node($uri, $name) {
  $comps = explode('?', $uri);
  $node_type = 'mmt_document';
  if (count($comps) > 1) { //module
	$node_type = 'mmt_module';
  }
  
  $newnode = (object) array(
     'type' => $node_type,
     'uid' => 0,
     'created' => strtotime("now"),
     'changed' => strtotime("now"),
     'status' => 1,
	 'comment' => 2,
 	 'promote' => 0,
     'moderate' => 0,
     'sticky' => 0,
     'language' => 'und'    
   );
   $newnode->title = $name;
   $newnode->uri = $uri;
   node_object_prepare($newnode);//necessary ?
   node_save($newnode);
   return $newnode->nid;
}


