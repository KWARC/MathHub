<?php

function oaff_add_vfs_field($node_type) {
  // Check if our field is not already created.
    
  if (!field_info_field('field_external')) {
    $field = array(
        'field_name' => 'field_external',
        'type' => 'vfs_file', // declared in vfs module
    );
    field_create_field($field);
  }

  // Create the instance on the bundle.
  $instance = array(
    'field_name' => 'field_external',
    'entity_type' => 'node',
    'label' => 'Content',
    'bundle' => $node_type,
    // If you don't set the "required" property then the field wont be required by default.
    'required' => true,
    'widget' => array(
      'type' => 'textfield',
    ),
    'display' => array(
      'default' => array( 
        'type' => 'mmt_formatter', // TODO replace with oaff_formatter
      ),
    ),    
  );
  field_create_instance($instance);
}

function oaff_create_node_types() {
  // Creating node type for OAFF documents
  $oaff_doc = (object) array(
    'type' => 'oaff_doc',
    'name' => 'OAFF Document',
    'base' => 'node_content',
    'description' => 'A node containing an flexiformal, multilingual OAFF Document',
    'has_title' => true,
  ); 
  node_type_save($oaff_doc);
  oaff_add_vfs_field('oaff_doc');
  
  // Creating node type for OAFF modules
  $oaff_mod = (object) array(
    'type' => 'oaff_mod',
    'name' => 'OAFF Module',
    'base' => 'node_content',
    'description' => 'A node containing an flexiformal, multilingual OAFF Module',
    'has_title' => true,
  ); 
  node_type_save($oaff_mod);
  oaff_add_vfs_field('oaff_mod');

  // Creating node type for OAFF documents
  $oaff_src = (object) array(
    'type' => 'oaff_src',
    'name' => 'OAFF Source File',
    'base' => 'node_content',
    'description' => 'A node containing an flexiformal, multilingual OAFF Source File',
    'has_title' => true,
  ); 
  node_type_save($oaff_src);
  oaff_add_vfs_field('oaff_src');
}

function delete_node_type($node_type_name, $remove_type = true) {
  // deleting all node instances
  $result = db_query('SELECT nid FROM {node} n WHERE n.type = :type', array(':type' => $node_type_name));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }
  node_delete_multiple($nids);
  //deleting node type
  if ($remove_type) {
    node_type_delete($node_type_name);
  }
}


function oaff_create_archives_node() {
  $html_text = file_get_contents(drupal_get_path('module', 'oaff') . '/archives.xhtml');

  $archives_node = (object) array(
   'type' => 'page',
   'uid' => 0,
   'created' => strtotime("now"),
   'changed' => strtotime("now"),
   'status' => 1,
   'comment' => 2,
   'promote' => 0,
   'moderate' => 0,
   'sticky' => 0,
   'language' => 'und'
  );

  $archives_node->title = 'Archives';
  node_object_prepare($archives_node);
  $archives_node->body['und']['0'] = array('value' => $html_text, 'summary' => 'Archives available in the OAFF', 'format' => 'full_html');
  node_save($archives_node);
  $path_opt = array(
    'source' => 'node/' . $archives_node->nid,
    'alias' => 'oaff/archives',
  );
  path_save($path_opt);

  return $archives_node->nid;
}

function oaff_create_contribute_node() {
  $html_text = file_get_contents(drupal_get_path('module', 'oaff') . '/contribute.xhtml');

  $contribute_node = (object) array(
   'type' => 'page',
   'uid' => 0,
   'created' => strtotime("now"),
   'changed' => strtotime("now"),
   'status' => 1,
   'comment' => 2,
   'promote' => 0,
   'moderate' => 0,
   'sticky' => 0,
   'language' => 'und'
  );

  $contribute_node->title = 'Contribute';
  node_object_prepare($contribute_node);
  $contribute_node->body['und']['0'] = array('value' => $html_text, 'summary' => 'Ways to contribute to the OAFF', 'format' => 'full_html');
  node_save($contribute_node);
  $path_opt = array(
    'source' => 'node/' . $contribute_node->nid,
    'alias' => 'oaff/contribute',
  );
  path_save($path_opt);

  return $contribute_node->nid;
}

function oaff_install() {
  oaff_create_node_types();
  $a_nid = oaff_create_archives_node();
  $c_nid = oaff_create_contribute_node();
  $oaff_config = array();
  $oaff_config['handled_node_types'] = array('mmtdoc', 'glossary', 'oaff_doc', 'oaff_mod', 'oaff_src');
  $oaff_config['archives_nid'] = $a_nid;
  $oaff_config['contribute_nid'] = $c_nid;
  $mlids = array();

  $arch_item = array(
    'link_path' => drupal_get_normal_path('oaff/archives'),
    'link_title' => "Archives",
    'weight' => 10,
    'menu_name' => 'main-menu'
  );
  $mlids[] = menu_link_save($arch_item);

  $arch_item = array(
    'link_path' => drupal_get_normal_path('oaff/contribute'),
    'link_title' => "Contribute",
    'weight' => 10,
    'menu_name' => 'main-menu'
  );
  $mlids[] = menu_link_save($arch_item);

  $forum_item = array(
    'link_path' => drupal_get_normal_path('forum'),
    'link_title' => "Discussion",
    'weight' => 15,
    'menu_name' => 'main-menu'
  );
  $mlids[] = menu_link_save($forum_item);
  
  $oaff_config['mlids'] = $mlids;
  variable_set('oaff_config', $oaff_config);

  $formats_S = variable_get("oaff_archive_formats", '');
  $node_types_S = variable_get("oaff_format_node_types", '');
  $extensions_S = variable_get("oaff_format_extensions", '');
  oaff_config_set($formats_S, $node_types_S, $extensions_S);
  
  drupal_set_message("Installed OAFF");
}

function oaff_uninstall() {
  $oaff_config = variable_get('oaff_config');
  $a_nid = $oaff_config['archives_nid'];
  node_delete($a_nid);
  $c_nid = $oaff_config['contribute_nid'];
  node_delete($c_nid);
  //for easy debugging, deleting content on reinstall
  delete_node_type('oaff_doc'); 
  delete_node_type('oaff_mod'); 
  delete_node_type('oaff_src'); 
  delete_node_type('mmtdoc', false); 
  
  delete_node_type('article', false);
  delete_node_type('glossary', false); 

  $mlids = $oaff_config['mlids'];
  foreach ($mlids as $mlid) {
    menu_link_delete($mlid);
  }
  drupal_set_message("Uninstalled OAFF");
}

/** declares tables for OAFF-specific content */ 
function oaff_schema() {
  $schema = array();
  $schema['oaff_errors'] = array(
    'description' => 'the base table for oaff nodes ',
    'fields' => array(
	    'eid' => array(
	      'description' => 'The primary identifier of a node with error',
        'type' => 'serial', 
        'unsigned' => true,
        'not null' => true,
      ),
      'nid' => array(
	      'description' => 'The id of the node that has the error',
        'type' => 'int', 
        'unsigned' => true,
        'not null' => true,
      ),
      'status' => array(
        'description' => 'The Error status, 1 for warning, 2 for error, 3 for fatal',
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
      ),
      'infos' => array(
        'description' => 'The number of Info messages',
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
      ),
      'warnings' => array(
        'description' => 'The number of Warning messages',
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
      ),
      'errors' => array(
        'description' => 'The number of Error messages',
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
      ),
      'fatals' => array(
        'description' => 'The number of Fatal messages',
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
      ),
    ),
    'primary key' => array('eid'),	
  );

  $schema['oaff_node_parents'] = array(
    'description' => 'the base table for representing relations between oaff nodes ',
    'fields' => array(
    'rid' => array(
      'description' => 'The primary identifier of a parent relation',
        'type' => 'serial', 
        'unsigned' => true,
        'not null' => true,
      ),
    'cid' => array(
      'description' => 'The id of the (child) node',
        'type' => 'int', 
        'unsigned' => true,
        'not null' => true,
      ),
    'pid' => array(
        'description' => 'The id of the parent',
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
      ),
    ),
    'primary key' => array('rid'),  
  );
  
  return $schema;
}